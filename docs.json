[
  {
    "name": "wwdc2019-237",
    "body": "Dave Abraham & John Harper\n\nLayout System\n- “Layout is about determining the bounds of what you see on the screen”\n- Root View -> Content View -> Text, root view is already minus the safe area insets\n- Modifier: `.edgesIgnoreingSafeArea(true)`\n- Parent proposes size for a child, but child chooses its own size\n- Modifiers: `.aspectRatio(1)`, `.frame(width: height:)`\n- SwiftUI rounds to nearest pixel\n- `.padding()` uses adaptive padding, automatically resizes padding depending on environment\n- By default, Image’s are fixed size\n- Adaptive Spacing & Edge to Edge spacing adheres to Human Interface Design Guidelines\n- How Stacks work: walkthrough about how the child sizes are calculated\n- `.layoutPriority(1)`, default priority is 0. Children are examined in layout priority order.\n- Alignments include `.lastTextBaseline` which align all text baselines to the bottom (ict `.bottom`)\n- `aligmentGuide(<.alignment>) { d in d[.bottom] * 0.98 }`\n- Custom ‘AlignmentID’ for deep nested subview alignment.\n\nCustom Views\n- Demo code of creating a colorwheel\n- Custom Shapes: adhere to `Shape { func path(in rect: CGRect) -> Path, optional var animatableData: AnimatableData }`\n- Modifier: `.tapAction { … }`\n- Custom Transisitions (scaleAndFade shown in demo)\n- Uses `ViewModifier { func body(content: Content) -> some View }`\n- `let transition = AnyTransition.modifier(active: modifier identity: modifier)`\n- `.drawingGroup()` draws everything with Metal on GPU in CALayer\n"
  }
]